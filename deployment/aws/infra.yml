AWSTemplateFormatVersion: "2010-09-09"
Description: Bravehub AWS platform infrastructure deployment.
Parameters:
  StackName:
    Type: String
    Description: The cloudformation friendly name.
  DnsSuffix:
    Type: String
    Description: The dns suffix used for creating multiple hosted zones required by the platform.
  BravehubEnv:
    Type: String
    Description: The bravehub environment we are currently creating.
    AllowedValues:
      - dev
      - stage
      - prod
  StackCidrPrefix:
    Type: String
    Description: The CIDR prefix we want to assign for the new environment. We apply /16 mask on it.
  StackDockerRegistry:
    Type: String
    Description: The ECR docker registry where the platform images can be found.
  StackDockerRegistryArn:
    Type: String
    Description: The ECR docker registry arn where the platform images can be found.
  StackDockerRegistryId:
    Type: String
    Description: The ECR docker registry unique account id where the platform images can be found.
  RouterInstanceType:
    Type: String
    Description: Decides the instance type we use for the public routing layer.
  RouterInstanceSpotPrice:
    Type: String
    Description: Decides the spot price we are willing to pay for obtaining cheap router instances.
  RouterMinCapacity:
    Type: String
    Description: The minimum number of router instances.
  RouterMaxCapacity:
    Type: String
    Description: The maximum number of router instances.
  RouterDesiredCapacity:
    Type: String
    Description: The desired number of router instances.
  RouterInstanceTypeSpot:
    Type: String
    Description: Decides the instance type we use for the public router layer from the spot instances pool.
  RouterMinCapacitySpot:
    Type: String
    Description: The minimum number of router instances which are speculative.
  RouterMaxCapacitySpot:
    Type: String
    Description: The maximum number of router instances which are speculative.
  RouterDesiredCapacitySpot:
    Type: String
    Description: The desired number of router instances which are speculative.
  SwarmMasterInstanceType:
    Type: String
    Description: The instance type we want to use for docker swarm master nodes.
  SwarmMasterCapacity:
    Type: String
    Description: The number of master nodes we place in the deterministic scaling group.
  SwarmWorkerInstanceType:
    Type: String
    Description: The instance type we want to use for docker swarm worker nodes.
  SwarmWorkerCapacity:
    Type: String
    Description: The number of worker nodes we place in the deterministic scaling group.
  SwarmWorkerSpotPrice:
    Type: String
    Description: The price we are willing to pay for every worker node placed in the speculative scaling group.
  SwarmWorkerCapacitySpot:
    Type: String
    Description: The number of worker nodes we place in the speculative scaling group.
Mappings:
  RegionAZsMap:
    eu-west-1:
      "AZs": [ "eu-west-1a", "eu-west-1b" ]
      "BastionImage": "ami-785db401"
      "RouterImage": "ami-785db401"
      "SwarmMasterImage": "ami-785db401"
      "SwarmWorkerImage": "ami-785db401"
Resources:
  RegionalVpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Join ["", [ Ref: StackCidrPrefix, ".0.0/16"]]
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags:
        - Key: Name
          Value: !Ref StackName
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
  RegionalVpcIgw:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "bravehub:vpc"
          Value: !Ref RegionalVpc
        - Key: "bravehub:stack"
          Value: !Ref StackName
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
  RegionalVpcIgwAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref RegionalVpc
      InternetGatewayId: !Ref RegionalVpcIgw
  RegionalVpcPublicDns:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: Public zone used for platform incoming internet traffic.
      HostedZoneTags:
        - Key: Name
          Value: !Ref DnsSuffix
        - Key: "bravehub:vpc"
          Value: !Ref RegionalVpc
        - Key: "bravehub:stack"
          Value: !Ref StackName
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
        - Key: "bravehub:layer"
          Value: "public-service-discovery"
      Name: !Ref DnsSuffix
  RegionalVpcInternalApiDns:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: Internal api zone used for platform service discovery.
      HostedZoneTags:
        - Key: Name
          Value: !Join [ "", [ "api.internal.", !Ref DnsSuffix ] ]
        - Key: "bravehub:vpc"
          Value: !Ref RegionalVpc
        - Key: "bravehub:stack"
          Value: !Ref StackName
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
        - Key: "bravehub:layer"
          Value: "internal-service-discovery"
      Name: !Join [ "", [ "api.internal.", !Ref DnsSuffix ] ]
      VPCs:
        - VPCId: !Ref RegionalVpc
          VPCRegion: !Ref "AWS::Region"
  RegionalVpcNatIP:
    Type: "AWS::EC2::EIP"
    DependsOn: RegionalVpcIgwAttachment
    Properties:
      Domain: vpc
  RegionalVpcNat:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt [ RegionalVpcNatIP, "AllocationId" ]
      SubnetId: !GetAtt BastionStack.Outputs.BastionSubnet1
  NtpSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: ntp-sg
      GroupDescription: Security group for controlling inbound / outbound rules for the ntp server.
      VpcId: !Ref RegionalVpc
      SecurityGroupIngress:
        - IpProtocol: udp
          FromPort: 123
          ToPort: 123
          SourceSecurityGroupId: !GetAtt RouterUserDataStack.Outputs.SecurityGroup
        - IpProtocol: udp
          FromPort: 123
          ToPort: 123
          SourceSecurityGroupId: !GetAtt HadoopStack.Outputs.ZookeeperSecurityGroup
        - IpProtocol: udp
          FromPort: 123
          ToPort: 123
          SourceSecurityGroupId: !GetAtt HadoopStack.Outputs.HbaseSecurityGroup
        - IpProtocol: udp
          FromPort: 123
          ToPort: 123
          SourceSecurityGroupId: !GetAtt SwarmMasterUserDataStack.Outputs.SecurityGroup
        - IpProtocol: udp
          FromPort: 123
          ToPort: 123
          SourceSecurityGroupId: !GetAtt SwarmWorkerUserDataStack.Outputs.SecurityGroup
      SecurityGroupEgress:
        - IpProtocol: udp
          FromPort: 123
          ToPort: 123
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 123
          ToPort: 123
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ntp-sg
        - Key: "bravehub:vpc"
          Value: !Ref RegionalVpc
        - Key: "bravehub:stack"
          Value: !Ref StackName
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
        - Key: "bravehub:layer"
          Value: "ntp"
  BastionStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: RegionalVpcIgwAttachment
    Properties:
      Parameters:
        AvailabilityZone1: !Select [ 0, !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "AZs" ] ]
        AvailabilityZone2: !Select [ 1, !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "AZs" ] ]
        BastionImage: !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "BastionImage" ]
        BastionInstanceType: t2.micro
        BravehubEnv: !Ref BravehubEnv
        Vpc: !Ref RegionalVpc
        VpcIgw: !Ref RegionalVpcIgw
        StackCidrPrefix: !Ref StackCidrPrefix
        StackName: !Ref StackName
      TemplateURL: {{BASTION_TEMPLATE_URL}}
      TimeoutInMinutes: "5"
  HadoopStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: RegionalVpcIgwAttachment
    Properties:
      Parameters:
        BravehubEnv: !Ref BravehubEnv
        RouterSecurityGroup: !GetAtt RouterUserDataStack.Outputs.SecurityGroup
        StackName: !Ref StackName
        SwarmMasterSecurityGroup: !GetAtt SwarmMasterUserDataStack.Outputs.SecurityGroup
        SwarmWorkerSecurityGroup: !GetAtt SwarmWorkerUserDataStack.Outputs.SecurityGroup
        Vpc: !Ref RegionalVpc
      TemplateURL: {{HADOOP_TEMPLATE_URL}}
      TimeoutInMinutes: "5"
  SwarmMasterUserDataStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        BastionSecurityGroup: !GetAtt BastionStack.Outputs.BastionSecurityGroup
        BravehubEnv: !Ref BravehubEnv
        DnsSuffix: !Ref DnsSuffix
        Vpc: !Ref RegionalVpc
        VpcPublicDns: !Ref RegionalVpcPublicDns
        VpcInternalApiDns: !Ref RegionalVpcInternalApiDns
        Role: "swarm-master"
        StackDockerRegistry: !Ref StackDockerRegistry
        StackDockerRegistryId: !Ref StackDockerRegistryId
        StackName: !Ref StackName
      TemplateURL: {{USERDATA_TEMPLATE_URL}}
      TimeoutInMinutes: "5"
  SwarmMasterStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: RegionalVpcIgwAttachment
    Properties:
      Parameters:
        AvailabilityZone1: !Select [ 0, !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "AZs" ] ]
        AvailabilityZone2: !Select [ 1, !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "AZs" ] ]
        BravehubEnv: !Ref BravehubEnv
        StackCidrPrefix: !Ref StackCidrPrefix
        StackName: !Ref StackName
        SwarmMasterCapacity: !Ref SwarmMasterCapacity
        SwarmMasterImage: !FindInMap [ "RegionAZsMap", Ref: "AWS::Region", "SwarmMasterImage" ]
        SwarmMasterInstanceType: !Ref SwarmMasterInstanceType
        SwarmMasterSecurityGroups:
          Fn::Join:
            - ","
            - - !Ref NtpSecurityGroup
              - !GetAtt SwarmMasterUserDataStack.Outputs.SecurityGroup
        SwarmMasterUserData: !GetAtt SwarmMasterUserDataStack.Outputs.UserData
        SwarmMasterUserDataSecurityGroup: !GetAtt SwarmMasterUserDataStack.Outputs.SecurityGroup
        SwarmWorkerSecurityGroup: !GetAtt SwarmWorkerUserDataStack.Outputs.SecurityGroup
        Vpc: !Ref RegionalVpc
        VpcPublicDns: !Ref RegionalVpcPublicDns
        VpcInternalApiDns: !Ref RegionalVpcInternalApiDns
        VpcNat: !Ref RegionalVpcNat
      TemplateURL: {{SWARM_MASTER_TEMPLATE_URL}}
      TimeoutInMinutes: "5"
  SwarmWorkerUserDataStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        BastionSecurityGroup: !GetAtt BastionStack.Outputs.BastionSecurityGroup
        BravehubEnv: !Ref BravehubEnv
        DnsSuffix: !Ref DnsSuffix
        Vpc: !Ref RegionalVpc
        VpcPublicDns: !Ref RegionalVpcPublicDns
        VpcInternalApiDns: !Ref RegionalVpcInternalApiDns
        Role: "swarm-worker"
        StackDockerRegistry: !Ref StackDockerRegistry
        StackDockerRegistryId: !Ref StackDockerRegistryId
        StackName: !Ref StackName
      TemplateURL: {{USERDATA_TEMPLATE_URL}}
      TimeoutInMinutes: "5"
  SwarmWorkerStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: RegionalVpcIgwAttachment
    Properties:
      Parameters:
        AvailabilityZone1: !Select [ 0, !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "AZs" ] ]
        AvailabilityZone2: !Select [ 1, !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "AZs" ] ]
        BravehubEnv: !Ref BravehubEnv
        RouterSecurityGroup: !GetAtt RouterUserDataStack.Outputs.SecurityGroup
        StackCidrPrefix: !Ref StackCidrPrefix
        StackName: !Ref StackName
        SwarmMasterSecurityGroup: !GetAtt SwarmMasterUserDataStack.Outputs.SecurityGroup
        SwarmWorkerCapacity: !Ref SwarmWorkerCapacity
        SwarmWorkerCapacitySpot: !Ref SwarmWorkerCapacitySpot
        SwarmWorkerImage: !FindInMap [ "RegionAZsMap", Ref: "AWS::Region", "SwarmWorkerImage" ]
        SwarmWorkerInstanceType: !Ref SwarmWorkerInstanceType
        SwarmWorkerSecurityGroups:
          Fn::Join:
            - ","
            - - !Ref NtpSecurityGroup
              - !GetAtt SwarmWorkerUserDataStack.Outputs.SecurityGroup
        SwarmWorkerSpotPrice: !Ref SwarmWorkerSpotPrice
        SwarmWorkerUserData: !GetAtt SwarmWorkerUserDataStack.Outputs.UserData
        SwarmWorkerUserDataSecurityGroup: !GetAtt SwarmWorkerUserDataStack.Outputs.SecurityGroup
        Vpc: !Ref RegionalVpc
        VpcInternalApiDns: !Ref RegionalVpcInternalApiDns
        VpcPublicDns: !Ref RegionalVpcPublicDns
        VpcNat: !Ref RegionalVpcNat
      TemplateURL: {{SWARM_WORKER_TEMPLATE_URL}}
      TimeoutInMinutes: "5"
  RouterUserDataStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        BastionSecurityGroup: !GetAtt BastionStack.Outputs.BastionSecurityGroup
        BravehubEnv: !Ref BravehubEnv
        DnsSuffix: !Ref DnsSuffix
        Vpc: !Ref RegionalVpc
        VpcPublicDns: !Ref RegionalVpcPublicDns
        VpcInternalApiDns: !Ref RegionalVpcInternalApiDns
        Role: "router"
        StackDockerRegistry: !Ref StackDockerRegistry
        StackDockerRegistryId: !Ref StackDockerRegistryId
        StackName: !Ref StackName
      TemplateURL: {{USERDATA_TEMPLATE_URL}}
      TimeoutInMinutes: "5"
  RouterStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: RegionalVpcIgwAttachment
    Properties:
      Parameters:
        AvailabilityZone1: !Select [ 0, !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "AZs" ] ]
        AvailabilityZone2: !Select [ 1, !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "AZs" ] ]
        BravehubEnv: !Ref BravehubEnv
        Vpc: !Ref RegionalVpc
        VpcIgw: !Ref RegionalVpcIgw
        VpcPublicDns: !Ref RegionalVpcPublicDns
        VpcInternalApiDns: !Ref RegionalVpcInternalApiDns
        RouterImage: !FindInMap [ "RegionAZsMap", Ref: "AWS::Region", "RouterImage" ]
        RouterInstanceType: !Ref RouterInstanceType
        RouterInstanceSpotPrice: !Ref RouterInstanceSpotPrice
        RouterMinCapacity: !Ref RouterMinCapacity
        RouterMaxCapacity: !Ref RouterMaxCapacity
        RouterDesiredCapacity: !Ref RouterDesiredCapacity
        RouterInstanceTypeSpot: !Ref RouterInstanceTypeSpot
        RouterMinCapacitySpot: !Ref RouterMinCapacitySpot
        RouterMaxCapacitySpot: !Ref RouterMaxCapacitySpot
        RouterDesiredCapacitySpot: !Ref RouterDesiredCapacitySpot
        RouterSecurityGroups:
          Fn::Join:
            - ","
            - - !Ref NtpSecurityGroup
              - !GetAtt HadoopStack.Outputs.ZookeeperSecurityGroup
              - !GetAtt HadoopStack.Outputs.HbaseSecurityGroup
              - !GetAtt RouterUserDataStack.Outputs.SecurityGroup
        RouterUserData: !GetAtt RouterUserDataStack.Outputs.UserData
        StackCidrPrefix: !Ref StackCidrPrefix
        StackName: !Ref StackName
      TemplateURL: {{ROUTER_TEMPLATE_URL}}
      TimeoutInMinutes: "5"
  StorageStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: RegionalVpcIgwAttachment
    Properties:
      Parameters:
        AvailabilityZone1: !Select [ 0, !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "AZs" ] ]
        AvailabilityZone2: !Select [ 1, !FindInMap [ RegionAZsMap, Ref: "AWS::Region", "AZs" ] ]
        BravehubEnv: !Ref BravehubEnv
        Vpc: !Ref RegionalVpc
        VpcNat: !Ref RegionalVpcNat
        VpcRouterTable: !GetAtt RouterStack.Outputs.VpcRouterTable
        VpcSwarmMasterTable: !GetAtt SwarmMasterStack.Outputs.VpcSwarmMasterTable
        VpcSwarmWorkerTable: !GetAtt SwarmWorkerStack.Outputs.VpcSwarmWorkerTable
        RouterSecurityGroup: !GetAtt RouterUserDataStack.Outputs.SecurityGroup
        StackCidrPrefix: !Ref StackCidrPrefix
        StackName: !Ref StackName
        SwarmMasterSecurityGroup: !GetAtt SwarmMasterUserDataStack.Outputs.SecurityGroup
        SwarmWorkerSecurityGroup: !GetAtt SwarmWorkerUserDataStack.Outputs.SecurityGroup
      TemplateURL: {{STORAGE_TEMPLATE_URL}}
      TimeoutInMinutes: "5"
Outputs:
  SharedStorageDns:
    Value: !GetAtt StorageStack.Outputs.SharedStorageDns
  PublicDnsNameServer:
    Value: !Join [";", !GetAtt ["RegionalVpcPublicDns", "NameServers"] ]
  Bastion1:
    Value: !GetAtt BastionStack.Outputs.Bastion1
  Bastion2:
    Value: !GetAtt BastionStack.Outputs.Bastion2
  NatIp:
    Value: !Ref RegionalVpcNatIP
