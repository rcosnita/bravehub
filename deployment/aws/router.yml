AWSTemplateFormatVersion: "2010-09-09"
Description: Bravehub router infrastructure deployment.
Parameters:
  AvailabilityZone1:
    Type: String
    Description: The first availability zone where the platform is currently deployed.
  AvailabilityZone2:
    Type: String
    Description: The second availability zone where the platform is currently deployed.
  BravehubEnv:
    Type: String
    Description: The bravehub environment for which we create the router.
  Vpc:
    Type: String
    Description: The vpc for which we create the router components.
  VpcIgw:
    Type: String
    Description: The vpc internet gateway which can be used by the router.
  VpcPublicDns:
    Type: String
    Description: The public dns zone available for the platform.
  VpcInternalApiDns:
    Type: String
    Description: The internal dns zone available for the platform.
  RouterImage:
    Type: String
    Description: The ami image we want to use for router instances.
  RouterInstanceType:
    Type: String
    Description: Decides the instance type we use for the public routing layer.
  RouterInstanceSpotPrice:
    Type: Number
    Description: Decides the spot price we are willing to pay for obtaining cheap router instances.
  RouterMinCapacity:
    Type: String
    Description: The minimum number of router instances.
  RouterMaxCapacity:
    Type: String
    Description: The maximum number of router instances.
  RouterDesiredCapacity:
    Type: Number
    Description: The desired number of router instances.
  RouterInstanceTypeSpot:
    Type: String
    Description: Decides the instance type we use for the public router layer from the spot instances pool.
  RouterMinCapacitySpot:
    Type: Number
    Description: The minimum number of router instances which are speculative.
  RouterMaxCapacitySpot:
    Type: Number
    Description: The maximum number of router instances which are speculative.
  RouterDesiredCapacitySpot:
    Type: Number
    Description: The desired number of router instances which are speculative.
  RouterSecurityGroups:
    Type: String
    Description: A list of comma separated security groups we want to apply to the router.
  RouterUserData:
    Type: String
    Description: The user data used for bootstrapping the router.
  StackCidrPrefix:
    Type: String
    Description: The CIDR prefix used for determining the location of the router.
  StackName:
    Type: String
    Description: The current stack name for which we create the router.
Resources:
  VpcRouterTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: router-routing-table
        - Key: "bravehub:vpc"
          Value: !Ref Vpc
        - Key: "bravehub:stack"
          Value: !Ref StackName
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
        - Key: "bravehub:layer"
          Value: "routing-api-gateway"
  VpcRouterTableInternetAccess:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      RouteTableId: !Ref VpcRouterTable
      GatewayId: !Ref VpcIgw
  VpcRouterSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: !Join ["", [ Ref: StackCidrPrefix, ".1.0/24" ] ]
      MapPublicIpOnLaunch: "true"
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: subnet-router-1
        - Key: "bravehub:vpc"
          Value: !Ref Vpc
        - Key: "bravehub:stack"
          Value: !Ref StackName
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
        - Key: "bravehub:layer"
          Value: "routing-api-gateway"
  VpcRouterSubnet1Routing:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref VpcRouterTable
      SubnetId: !Ref VpcRouterSubnet1
  VpcRouterSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref AvailabilityZone2
      CidrBlock: !Join ["", [ Ref: StackCidrPrefix, ".2.0/24" ] ]
      MapPublicIpOnLaunch: "true"
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: subnet-router-2
        - Key: "bravehub:vpc"
          Value: !Ref Vpc
        - Key: "bravehub:stack"
          Value: !Ref StackName
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
        - Key: "bravehub:layer"
          Value: "routing-api-gateway"
  VpcRouterSubnet2Routing:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref VpcRouterTable
      SubnetId: !Ref VpcRouterSubnet2
  RouterSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: router-sg
      GroupDescription: Security group for controlling inbound / outbound rules for the public router instances.
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 111
          ToPort: 111
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 2049
          ToPort: 2049
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: router-sg
        - Key: "bravehub:vpc"
          Value: !Ref Vpc
        - Key: "bravehub:stack"
          Value: !Ref StackName
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
        - Key: "bravehub:layer"
          Value: "routing-api-gateway"
  RouterAutoScalingIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "ec2-permissions"
          PolicyDocument:
            Version : "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "ec2:DescribeInstances"
                Resource: "*"
        - PolicyName: "route53-permissions"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "route53:GetHostedZone"
                  - "route53:ChangeResourceRecordSets"
                Resource:
                  - !Join ["", [ "arn:aws:route53:::hostedzone/", !Ref VpcInternalApiDns ] ]
                  - !Join ["", [ "arn:aws:route53:::hostedzone/", !Ref VpcPublicDns ] ]
        - PolicyName: "cloudformation-permissions"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "cloudformation:DescribeStacks"
                Resource: "*"
        - PolicyName: "ecr-platform-permissions"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                Resource: "*"
  RouterAutoScalingIamProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles:
        - !Ref RouterAutoScalingIamRole
  RouterAutoScalingLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      AssociatePublicIpAddress: "true"
      ImageId: !Ref RouterImage
      InstanceMonitoring: true
      InstanceType: !Ref RouterInstanceType
      IamInstanceProfile: !Ref RouterAutoScalingIamProfile
      KeyName: !Ref StackName
      SecurityGroups: !Split [",", !Join [",", [ !Ref RouterSecurityGroups, !Ref RouterSecurityGroup ] ] ]
      UserData: !Ref RouterUserData
  RouterAutoScaling:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones:
        - !Ref AvailabilityZone1
        - !Ref AvailabilityZone2
      DesiredCapacity: !Ref RouterDesiredCapacity
      MaxSize: !Ref RouterMaxCapacity
      MinSize: !Ref RouterMinCapacity
      LaunchConfigurationName: !Ref RouterAutoScalingLaunchConfig
      VPCZoneIdentifier:
        - !Ref VpcRouterSubnet1
        - !Ref VpcRouterSubnet2
      Tags:
        - Key: Name
          Value: router-scaling-group
          PropagateAtLaunch: true
        - Key: "bravehub:vpc"
          Value: !Ref Vpc
          PropagateAtLaunch: true
        - Key: "bravehub:stack"
          Value: !Ref StackName
          PropagateAtLaunch: true
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
          PropagateAtLaunch: true
        - Key: "bravehub:layer"
          Value: "routing-api-gateway"
          PropagateAtLaunch: true
        - Key: "bravehub:scaler"
          Value: "deterministic"
          PropagateAtLaunch: true
  RouterAutoScalingLaunchConfigSpot:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      AssociatePublicIpAddress: "true"
      ImageId: !Ref RouterImage
      InstanceMonitoring: true
      InstanceType: !Ref RouterInstanceTypeSpot
      IamInstanceProfile: !Ref RouterAutoScalingIamProfile
      KeyName: !Ref StackName
      SecurityGroups: !Split [",", !Join [",", [ !Ref RouterSecurityGroups, !Ref RouterSecurityGroup ] ] ]
      SpotPrice: !Ref RouterInstanceSpotPrice
      UserData: !Ref RouterUserData
  RouterAutoScalingSpot:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones:
        - !Ref AvailabilityZone1
        - !Ref AvailabilityZone2
      DesiredCapacity: !Ref RouterDesiredCapacitySpot
      MaxSize: !Ref RouterMaxCapacitySpot
      MinSize: !Ref RouterMinCapacitySpot
      LaunchConfigurationName: !Ref RouterAutoScalingLaunchConfigSpot
      VPCZoneIdentifier:
        - !Ref VpcRouterSubnet1
        - !Ref VpcRouterSubnet2
      Tags:
        - Key: Name
          Value: router-scaling-group
          PropagateAtLaunch: true
        - Key: "bravehub:vpc"
          Value: !Ref Vpc
          PropagateAtLaunch: true
        - Key: "bravehub:stack"
          Value: !Ref StackName
          PropagateAtLaunch: true
        - Key: "bravehub:environment"
          Value: !Ref BravehubEnv
          PropagateAtLaunch: true
        - Key: "bravehub:layer"
          Value: "routing-api-gateway"
          PropagateAtLaunch: true
        - Key: "bravehub:scaler"
          Value: "speculative"
          PropagateAtLaunch: true
Outputs:
  VpcRouterSubnet1:
    Value: !Ref VpcRouterSubnet1
  RouterSecurityGroup:
    Value: !GetAtt [ RouterSecurityGroup, "GroupId" ]
  VpcRouterTable:
    Value: !Ref VpcRouterTable
